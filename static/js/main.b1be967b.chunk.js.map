{"version":3,"sources":["App.js","index.js"],"names":["dictionarymeaning","App","useState","meaning","setmeaning","inputted","setinputted","emojiknown","Object","keys","onChange","e","target","value","event","userinput","undefined","emojimenaing","map","emoji","onClick","emojiClicked","rootElement","document","getElementById","createRoot","render"],"mappings":"wKAuNA,IAAMA,EAAoB,CACxB,eAAM,OACN,eAAM,WACN,eAAM,QACN,eAAM,QACN,eAAM,OAEO,SAASC,IACtB,MAA8BC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KAC1B,EAAgCF,mBAAS,IAAG,mBAArCG,EAAQ,KAAEC,EAAW,KAgB5B,IAAMC,EAAaC,OAAOC,KAAKT,GAS/B,OACE,qCACE,6BAAI,8BACJ,uBACEU,SAAU,SAACC,GA1BfL,EA2BcK,EA3BIC,OAAOC,OAG3B,SAAsBC,GACpB,IAAIC,EAAYD,EAAMF,OAAOC,MAEzBV,EAAUH,EAAkBe,GAEhC,QAAeC,GAAXb,EACF,MAAO,4BAETC,EAAWD,EACb,CAgBQc,CAAaN,EACf,IAEF,8BAAG,mBAAiBN,EAAS,SAC7B,6BAAKF,IACL,6BAAI,iBACHI,EAAWW,KAAI,SAACC,GAAK,OACpB,sBAAMC,QAAS,kBAnBrB,SAAsBD,GAGpBf,EAFcJ,EAAkBmB,GAGlC,CAe2BE,CAAaF,EAAM,EAAC,SACtCA,GAD4CA,EAExC,MAIf,CCvQA,IAAMG,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACzB,EAAG,M","file":"static/js/main.b1be967b.chunk.js","sourcesContent":["import \"./styles.css\";\nimport \"./componenets/Navbar\";\nimport React, { useState } from \"react\";\n\n/*Exercise 6 done\nvar username = \"tejas\";\nexport default function App() {\n  return (\n    <>\n      <h1>\n        {\" \"}\n        Welcome <span style={{ color: \"Red\" }}>{username}</span>\n      </h1>\n    </>\n  );\n}*/\n/*Exercise 7 done\n var count = 0;\nexport default function App() {\n  function likingcomment() {\n    count = count + 1;\n    console.log(\"Click\", count);\n  }\n  return (\n    <>\n      <button onClick={likingcomment}>Like</button>\n    </>\n  );\n}\n*/\n/*Exercise 8 done\nexport default function App() {\n  const [count, setcount] = useState(1);\n\n  function handler() {\n    var counting = count + 1;\n  setcount(counting)\n  }\n\n  return (\n    <>\n      <button onClick={handler}>Like</button> {count}\n    </>\n  );\n}*/\n\n/*Exercise 10 (through withouthooks)\nexport default function App() {\n  function inputing(event) {\n    console.log(event.target.value);\n  }\n  return (\n    <>\n      <label>tell something</label>\n      <input onChange={inputing}></input>\n    </>\n  );\n}\n*/\n\n/*Exercise 10 completed\nexport default function App(){\n   const [inputing,setinputing] = useState(\"\");\n\n   function setting(event){\n\n     setinputing(event.target.value);\n   }\n\nreturn (<>\n<input onChange={setting}>\n</input>\n{inputing}</>)\n\n}*/\n/*Exercise 11\nconst dictionarymeaning = {\n  \"ðŸ˜˜\": \"Love\",\n  \"ðŸ¥³\": \"Birthday\",\n  \"ðŸ¤£\": \"Laugh\",\n  \"ðŸ˜Š\": \"Smile\",\n  \"ðŸ˜’\": \"Sad\"\n};\nexport default function App() {\n  const [meaning, setmeaning] = useState(\"\");\n  const [inputted, setinputted] = useState(\"\");\n\n  function setting(event) {\n    setinputted(event.target.value);\n  }\n\n  function emojimenaing(event) {\n    var userinput = event.target.value;\n\n    var meaning = dictionarymeaning[userinput];\n    setmeaning(meaning);\n  }\n  return (\n    <>\n      <input\n        onChange={(e) => {\n          setting(e);\n          emojimenaing(e);\n        }}\n      ></input>\n      {inputted}\n      {meaning}\n    </>\n  );\n}*/\n\n//Exefrcise 12 map and index\n/*Map 1\nvar shoppinglist = [\"milk\", \"banana\", \"orange\", \"apple\", \"salad\", \"oranges\"];\n\nexport default function App() {\n  return (\n    <>\n      <div>\n        <h1> Print shopping list </h1>\n        <ul>\n          {shoppinglist.map(function (items) {\n            return <li>{items}</li>;\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}\n*/\n/*\nindex 2\n\n\nExcercise 12 :1 index , Conditional loops in reacr \n*/\n/*\nOnly conditional logic implemented\nvar shoppinglist = [\"milk\", \"banana\", \"orange\", \"apple\", \"salad\", \"oranges\"];\n\nvar user = \"tejas\";\nvar userlogin = true;\nexport default function App() {\n  function userdetail() {\n    if (userlogin) {\n      return <em>{user}</em>;\n    }\n    return \"username\";\n  }\n\n  return (\n    <>\n      <div>\n        <h1> Print shopping list </h1>\n        <h2>\n          Welcome <span style={{ color: \"red\" }}>{userdetail()}</span>\n        </h2>\n        <ul>\n          {shoppinglist.map(function (items) {\n            return <li>{items}</li>;\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}*/\n\n//Index oprations\n/*var shoppinglist = [\"milk\", \"banana\", \"orange\", \"apple\", \"salad\", \"oranges\"];\n\nvar user = \"tejas\";\nvar userlogin = true;\nexport default function App() {\n  function userdetail() {\n    if (userlogin) {\n      return <em>{user}</em>;\n    }\n    return \"username\";\n  }\n  function getbg(index) {\n    if (index % 2 === 0) {\n      return \"lightblue\";\n    }\n    return \"yellow\";\n  }\n\n  function listHandeler(items) {\n    console.log(\"clicked on :\", items);\n  }\n  return (\n    <>\n      <div>\n        <h1> Print shopping list </h1>\n        <h2>\n          Welcome <span style={{ color: \"red\" }}>{userdetail()}</span>\n        </h2>\n     \n        <ul>\n          {shoppinglist.map(function (items, index) {\n            return (\n              <li\n                onClick={() => listHandeler(items)}\n                key={index}\n                style={{ backgroundColor: getbg(index) }}\n              >\n                {items}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n}*/\n\nconst dictionarymeaning = {\n  \"ðŸ˜˜\": \"Love\",\n  \"ðŸ¥³\": \"Birthday\",\n  \"ðŸ¤£\": \"Laugh\",\n  \"ðŸ˜Š\": \"Smile\",\n  \"ðŸ˜’\": \"Sad\"\n};\nexport default function App() {\n  const [meaning, setmeaning] = useState(\"\");\n  const [inputted, setinputted] = useState(\"\");\n\n  function setting(event) {\n    setinputted(event.target.value);\n  }\n\n  function emojimenaing(event) {\n    var userinput = event.target.value;\n\n    var meaning = dictionarymeaning[userinput];\n\n    if (meaning == undefined) {\n      return \"don't have this emoji yet\";\n    }\n    setmeaning(meaning);\n  }\n  const emojiknown = Object.keys(dictionarymeaning);\n  //  var objecttoarray = Object.keys(dictionarymeaning); {//objecttoarray}*/\n\n  function emojiClicked(emoji) {\n    var meaning = dictionarymeaning[emoji];\n\n    setmeaning(meaning);\n  }\n\n  return (\n    <>\n      <h1> Print Meaning of emojis </h1>\n      <input\n        onChange={(e) => {\n          setting(e);\n          emojimenaing(e);\n        }}\n      ></input>\n      <p>Meaning of this {inputted} is</p>\n      <h3>{meaning}</h3>\n      <h2>Total emojis</h2>\n      {emojiknown.map((emoji) => (\n        <span onClick={() => emojiClicked(emoji)} key={emoji}>\n          {emoji}\n        </span>\n      ))}\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}